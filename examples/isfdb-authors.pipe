#! /usr/local/bin/data-pipeline

IN: SPARQL
OUT: JSON

IMPORT: RDF::Core::Model RDF::Core::Storage::Postgres

LET model: 4
LET database: 'dbi:Pg:'

LET query: 
        ' PREFIX foaf: <http://xmlns.com/foaf/0.1/>      '
      ~ ' PREFIX dc:   <http://purl.org/dc/elements/1.1/>'
      ~ ' PREFIX my: <http://isfdb.org/ns/>              '
      ~ ' SELECT ?label ?surname ?birth_place            '
      ~ ' WHERE {                                        '
      ~ '         ?y dc:type "birth" .                   '
      ~ '         ?y my:place ?b .                       '
      ~ '         ?y my:person ?resource .               '
      ~ '         ?resource foaf:name ?label .           '
      ~ '         ?resource foaf:surname ?surname .      '
      ~ '         ?b dc:title ?birth_place               '
      ~ ' }                                              '

FROM: model: RDF::Core::Model DOES:
    Storage: RDF::Core::Storage::Postgres DOES:
        ConnectStr: $database
        Model: $model
    DONE
Done

PIPELINE DOES IN ORDER:
    SPARQL: query: $query
    => JSON
DONE

__END__

PIPELINE DOES IN ORDER:
    SPARQL: query DOES:
        prefix DOES:
            foaf: 'http://xmlns.com/foaf/0.1/'
            dc:   'http://purl.org/dc/elements/1.1'
            my:   'http://isfdb.org/ns/'
        DONE
        select: [qw(label surname birthplace)]
        where: '{'
            '         ?y dc:type "birth" .              '
            '         ?y my:place ?b .                  '
            '         ?y my:person ?resource .          '
            '         ?resource foaf:name ?label .      '
            '         ?resource foaf:surname ?surname . '
            '         ?b dc:title ?birth_place          '
            ' }                                         '
    DONE
    => JSON
DONE
